#include "dialog.h"
#include "ui_dialog.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// \brief Dialog::Dialog
/// \param parent
///.
/// 
#include <fstream>
#include <iostream>
#include <QFile>
#include <QTextStream>
#include <TextArray>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// . 
Dialog::Dialog(QWidget *parent)
     : QDialog(parent)
     , ui(new Ui::Dialog)
     {
          ui->setupUi(this);
////////////////////////////////////////////// загрузка нейронов и сигнала из файла в вектор ///////////////////////////////////////////////////////////////////////////////////////
    std::ifstream is(
        
 "/home/viktor/высоты.txt"

        );
    std::istream_iterator<unsigned long long> start(is), end;
    std::vector<int> list_of_visot(start, end); 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  
////////////////////////////////////////////// загрузка нейронов и сигнала из файла в вектор ///////////////////////////////////////////////////////////////////////////////////////
    std::ifstream is2(
        
 "/home/viktor/ширины.txt"

        );
    std::istream_iterator<unsigned long long> start2(is2), end2;
    std::vector<int> list_of_shirin(start2, end2); 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
/// 
QFile file("out.txt");
if (!file.open(QIODevice::WriteOnly | QIODevice::Text))
    return;
 QVector<QString> TextArray;
QTextStream out(&file);
for (const QString& str : TextArray)
    out << list_of_visot[] << "\n";
    
//    for (int x=0;x<1422 ;x++ )
//     {
              
//         }        
     }

Dialog::~Dialog()
     {
          delete ui;
     }

